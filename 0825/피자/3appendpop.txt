T = int(input())

for t in range(1,T+1):
    
    N,M = map(int,input().split())

####(치즈양, 피자번호)를 원소로 하는 리스트를 생성합니다

    c_list = list(map(int,input().split()))

    c_queue = []

    for i in range(1,M+1):
        
        c_queue.append((c_list[i-1],i))
######

##c_queue에서 왼쪽 원소부터 하나씩 빼와서 화덕의 크기 N만큼 채워줍니다.
    fire = []

    for i in range(N):
        
        fire.append(c_queue.pop(0))

##남아있는 피자 수와 다 구운 피자 수를 세기 위한 변수
    remain = M-N
    complete = 0

#피자를 구운 수가 M이 되면 모두 구웠다는 뜻이므로 반복을 종료합니다.
    while complete != M:
        
        a,num = fire.pop(0) #화덕의 0번째 원소를 빼와서

        if a // 2 == 0: #치즈 양을 절반으로 줄일때 그것이 0이 된다면,
            
            if remain != 0: #남아있는 피자 수가 존재한다면,

                fire.append(c_queue.pop(0)) #남아있는 피자 리스트에서 왼쪽부터 하나씩 빼와서 화덕의 오른쪽에 채워넣습니다.

                remain -= 1 #남아있는 피자 수를 감소시키고
                complete += 1 #구운 피자 수를 증가시킵니다.
            
            else: #남아있는 피자가 존재하지 않는다면

                complete += 1 #구운 피자 수만 증가시킵니다.
                
                pass
        
        else: #치즈 양을 절반으로 줄일때 0이 아니라면, 다시 화덕의 오른쪽에 넣어줍니다.
            
            fire.append((a//2,num))
    
#구운 피자 수가 M이면, 모두 구웠다는 뜻이고, 마지막에 POP된 원소의 피자 번호가 num에 저장되어있습니다.

#M-1까지만 굽고싶다면 fire[0][1]을 출력하면 됩니다.
    print('#'+str(t),num,sep=' ')