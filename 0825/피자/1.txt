from collections import deque

T = int(input())

for t in range(1,T+1):
    
    N,M = map(int,input().split())

##문제의 인덱스 번호를 유지하기 위해, (피자 치즈,해당 인덱스)를 원소로 하는 deque를 생성합니다
##enumerate 사용

    c_list = deque([(a,i) for i,a in enumerate(map(int,input().split()),start=1)])

#화덕의 크기 N만큼 피자치즈 리스트 c_list에서 빼와서 채워줍니다.
    fire = deque([])

    for i in range(N):
        
        fire.append(c_list.popleft())

#남아있는 피자 수와 다 구운 피자 수를 세기 위한 변수를 초기화합니다
    remain = M-N

    complete = 0

    
    while complete != M-1: #구운 피자 수가  M-1이면, 화덕에 마지막 하나가 남아있습니다. 그럴때까지 반복합니다
        
        if fire[0][0] // 2 == 0: #화덕의 0번째 원소의 0번째는 치즈 양이고, 이것의 //2가 0이 된다면,
            
            fire.popleft() #0번째 원소를 제거하고

            complete += 1 #구운 피자 수를 1 증가시킵니다

            if c_list != deque(): #남아있는 피자가 존재한다면
            
                fire.append(c_list.popleft()) #화덕의 오른쪽에 넣어줍니다
                remain -= 1 #remain은 필요가 없네?
        
        else: #0번째 원소의 치즈가 다 녹지 않았다면,
            
            fire[0] = (fire[0][0]//2,fire[0][1]) #0번째 원소의 치즈를 녹이고 원소를 갱신합니다
            fire.rotate(-1) ##화덕을 왼쪽으로 회전시킵니다. 예시) deque([1,2,3]) >>> deque([2,3,1])/// rotate(1)이면.. deque([3,1,2])가 된다

##구운 피자 수가 M-1이면 반복문을 종료하고 남아있는 피자의 번호를 출력합니다

    print('#'+str(t),fire[0][1],sep=' ')